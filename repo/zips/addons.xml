<?xml version='1.0' encoding='utf-8'?>
<addons><addon id="context.umbrella" name="Umbrella - Global Context Menu Items" provider-name="Umbrella" version="1.2.8">
	<requires>
		<import addon="script.module.requests" version="2.19.1" />
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="contextSettings.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - CM Settings</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.settings)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true)
				</visible>
			</item>
			<item library="addtoLibrary.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Add to Library</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.addtoLibrary)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="traktManager.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Trakt Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.traktManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="clearProviders.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Clear Providers</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.umbrella.clearProviders)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]] |
					[String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="clearBookmark.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Clear Item Bookmark</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.clearBookmark)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					ListItem.IsResumable +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="rescrape.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Rescrape Item</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.umbrella.rescrape)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="libRescrape.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Rescrape Lib Item</label>
				<visible>
					String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="playFromHere.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Play from here</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.playFromHere)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
			<item library="autoPlay.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(umbrella.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.umbrella.autoPlay)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="sourceSelect.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(umbrella.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.umbrella.sourceSelect)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="findSimilar.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Find Similar</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.findSimilar)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="browseSeries.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Browse Series</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.browseSeries)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>
			<item library="browseEpisodes.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Browse Episodes</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.browseEpisodes)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Umbrella - This Addon is currently in beta. Please be aware there may be bugs present</summary>
		<description lang="en">Adds Global Contextual Menu Items for Umbrella menu items throughout Kodi</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum />
		<website>https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/master/matrix/context.umbrella</website>
		<source>https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/master/matrix/context.umbrella</source>
		<disclaimer lang="en" />
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.jpg</fanart>
			<screenshot />
		</assets>
		<news>
[B][COLOR red]Update - v1.2.8 - Jan 9th, 2022[/COLOR][/B]
[COLOR yellow]--[/COLOR][I] Changed to allow highlight color to be used for context.[/I]
		</news>
	</extension>
</addon><addon id="plugin.program.desiwizard" name="[COLOR limegreen]Desi[/COLOR]Wizard" version="1.0.7" provider-name="drinfernoo, slamious">
    <requires>
        <import addon="xbmc.python" version="3.0.0" />
        <import addon="script.module.requests" />
        <import addon="script.module.six" />
        <import addon="script.kodi.android.update" optional="true" version="1.1.7" />
        <import addon="script.speedtester" optional="true" version="1.1.2" />
    </requires>
    
    <extension point="xbmc.python.pluginsource" library="default.py">
        <provides>executable</provides>
    </extension>
    
    <extension point="xbmc.service" library="startup.py" start="startup" />
    
    <extension point="xbmc.addon.metadata">
        <summary lang="en">[COLOR limegreen]Desi[/COLOR]Wizard</summary>
        <description lang="en">[COLOR limegreen]Desi[/COLOR]Wizard offers many maintenance features, selective add-on data saving, and automated build installs.</description>
        <platform>all</platform>
        <reuselanguageinvoker>false</reuselanguageinvoker>
        <source>https://github.com/slrwin/plugin.program.desiwizard/</source>
        <news>
1.0.0
 - Initial Commit
        </news>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.png</fanart>
        </assets>
    </extension>
</addon><addon id="plugin.video.dramacool" name="DramaCool" version="3.1.0" provider-name="groggyegg">
    <requires>
        <import addon="script.module.beautifulsoup4" />
        <import addon="script.module.peewee" />
        <import addon="script.module.requests" />
        <import addon="script.module.resolveurl" />
        <import addon="script.module.six" />
        <import addon="script.module.xbmcext" />
    </requires>
    <extension point="xbmc.python.pluginsource" library="dramacool/addon.py">
        <provides>video</provides>
    </extension>
    <extension point="xbmc.addon.metadata">
        <description lang="en_GB">Watch Asian Drama and Korean Show with English subtitles on DramaCool.</description>
        <platform>all</platform>
        <license>MIT License</license>
        <source>https://github.com/groggyegg/plugin.video.dramacool</source>
        <news>v3.1.0 (2023-01-21)
            - update changes from xbmcext
            - add filter year 2022
            - remove old migration
            - embed pymaybe dependency
            - update dramacool urls
            - update database
        </news>
        <assets>
            <icon>resources/icon.png</icon>
            <fanart>resources/fanart.jpg</fanart>
        </assets>
    </extension>
</addon><addon id="plugin.video.fen" name="Fen" provider-name="Tikipeter" version="3.0.44">
    <requires>
        <import addon="xbmc.python" version="3.0.0" />
        <import addon="script.module.requests" version="2.19.1" />
        <import addon="script.module.cocoscrapers" version="0.0.1" />
    </requires>
    <extension library="resources/lib/fen.py" point="xbmc.python.pluginsource">
        <provides>video</provides>
    </extension>
    <extension library="resources/lib/service.py" point="xbmc.service" />
    <extension library="resources/lib/" point="xbmc.python.module" />
    <extension point="kodi.context.item">
        <menu id="kodi.core.main">
            <item library="resources/contextmenu/refresh_widgets.py">
                <label>40001</label>
                <visible>String.IsEqual(ListItem.Property(fen.widget),true) + !String.StartsWith(Window(home).Property(fen.kodi_version),20)</visible>
            </item>
            <item library="resources/contextmenu/mark_watched.py">
                <label>40003</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)] + String.IsEqual(ListItem.Property(fen.widget),true) + String.IsEqual(ListItem.Property(fen.playcount),0) + !String.StartsWith(Window(home).Property(fen.kodi_version),20)</visible>
            </item>
            <item library="resources/contextmenu/mark_unwatched.py">
                <label>40004</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)] + String.IsEqual(ListItem.Property(fen.widget),true) + String.IsEqual(ListItem.Property(fen.playcount),1) + !String.StartsWith(Window(home).Property(fen.kodi_version),20)</visible>
            </item>
            <item library="resources/contextmenu/clear_progress.py">
                <label>40009</label>
                <visible>[String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)] + String.IsEqual(ListItem.Property(fen.widget),true) + String.IsEqual(ListItem.Property(fen.in_progress),true) + !String.StartsWith(Window(home).Property(fen.kodi_version),20)</visible>
            </item>
            <item library="resources/contextmenu/options.py">
                <label>40007</label>
                <visible>String.IsEqual(ListItem.Property(fen.widget),true) + !String.StartsWith(Window(home).Property(fen.kodi_version),20)</visible>
            </item>
            <item library="resources/contextmenu/extras.py">
                <label>40006</label>
                <visible>String.IsEqual(ListItem.Property(fen.widget),true) + !String.StartsWith(Window(home).Property(fen.kodi_version),20)</visible>
            </item>
        </menu>
    </extension>
    <extension point="xbmc.addon.metadata">
        <reuselanguageinvoker>true</reuselanguageinvoker>
        <summary lang="en">Mainly used for Furk and Easynews.</summary>
        <description lang="en">This add-on is intended for advanced Kodi users only. Mainly used for Furk and Easynews(web) account access. An External Scraper package may be used. You must own the content of any media you play through this addon.</description>
        <platform>all</platform>
		<disclaimer lang="en">The author of this addon does not host any of the content which is found and has no affiliation with any of the content providers. This addon simply searches websites for content.</disclaimer>
        <license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
        <assets>
            <icon>resources/media/fen_icon.png</icon>
            <fanart>resources/media/fen_fanart.png</fanart>
            <clearlogo>resources/media/fen_clearlogo.png</clearlogo>
        </assets>
        <news>INFO: For latest changes see Changelog within Tools of add-on.</news>
    </extension>
</addon><addon id="plugin.video.umbrella" name="Umbrella" provider-name="Umbrella" version="6.6.181">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="script.module.cocoscrapers" version="1.0.10" />
		<import addon="script.module.requests" />
		<import addon="script.module.beautifulsoup4" />
		<import addon="script.module.metahandler" version="5.0.1a" optional="true" />
		<import addon="plugin.video.youtube" optional="true" />
	</requires>
	<extension point="xbmc.python.pluginsource" library="umbrella.py">
		<provides>video</provides>
	</extension>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="resources\lib\context\addtoLibrary.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Add to Library</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.addtoLibrary)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\traktManager.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Trakt Manager</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.traktManager)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\clearProviders.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Clear Providers</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.umbrella.clearProviders)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]] |
					[String.Contains(Container.FolderPath,videodb://) +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="resources\lib\context\clearBookmark.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Clear Item Bookmark</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.clearBookmark)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					ListItem.IsResumable +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\rescrape.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Rescrape Item</label>
				<visible>
					[!String.IsEmpty(Window(home).Property(context.umbrella.rescrape)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]]
				</visible>
			</item>
			<item library="resources\lib\context\libRescrape.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Rescrape Lib Item</label>
				<visible>
					[String.Contains(Container.FolderPath,videodb://) | String.Contains(Container.ListItem.FolderPath,videodb://)] +
					[String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.movieLib.path)) | String.Contains(Container.ListItem.Path,Window(home).Property(umbrella.tvLib.path))] +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\playFromHere.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Play from here</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.playFromHere)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
			<item library="resources\lib\context\autoPlay.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(umbrella.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.umbrella.autoPlay)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\sourceSelect.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(umbrella.autoPlay.enabled)) +
					!String.IsEmpty(Window(home).Property(context.umbrella.sourceSelect)) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.umbrella/?action=play) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\findSimilar.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Find Similar</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.findSimilar)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>
			<item library="resources\lib\context\browseSeries.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Browse Series</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.browseSeries)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>
			<item library="resources\lib\context\browseEpisodes.py">
				<label>[B][COLOR $INFO[Window(home).Property(context.umbrella.highlightcolor)]]Umbrella[/COLOR][/B] - Browse Episodes</label>
				<visible>
					!String.IsEmpty(Window(home).Property(context.umbrella.browseEpisodes)) +
					String.StartsWith(ListItem.path,plugin://plugin.video.umbrella/) +
					String.IsEqual(ListItem.Property(isUmbrella_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" library="service.py" start="startup" />
	<extension point="xbmc.python.module" library="resources/lib/" />
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>true</reuselanguageinvoker>
		<summary lang="en">[B]Umbrella[/B] - We do not host any of the contents streamed</summary>
		<description lang="en">[B]Umbrella[/B][CR] This addon does not form part of the Kodi Media Centre. Please do not seek assistance with this addon from any of the Official Kodi Support Channels.[CR]The author does not host any of the content in this addon and takes no responsibility for content found. We do not know anything about a lab under Raccoon City.</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum />
		<website>https://umbrellaplug.github.io</website>
		<source>https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/</source>
		<disclaimer lang="en">The author of this addon does not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches websites for content. Use at your own risk!</disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.jpg</fanart>
			<screenshot>resources/screenshots/screenshot001.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot002.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot003.jpg</screenshot>
		</assets>
		<news>
[B][COLOR black]Update - v6.6.18 - Feb 21th, 2023[/COLOR][/B]
--[FIX][I] Fixed issue with playlist creation for playnext from widgets.[/I]
		</news>
	</extension>

</addon><addon id="plugin.video.watchnixtoons2" name="WatchNixtoons2" version="0.7.0" provider-name="doko">
    <requires>
        <import addon="script.module.requests" />
        <import addon="script.module.six" />
    </requires>
    <extension point="xbmc.python.pluginsource" library="default.py">
        <provides>video</provides>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary lang="en">WatchNixtoons2</summary>
        <description lang="en">
Watch cartoons and anime from [COLOR orange][B]www.wcofun.net[/B][/COLOR].

Support the WatchCartoonOnline website with a PayPal donation to:
[COLOR khaki][B]wcohelp@yandex.com[/B][/COLOR]

Add-on originally by doko.
        </description>
        <disclaimer lang="en">The authors of this addon do not host any of the content found or have any affiliation with the content providers. This add-on only scrapes web pages.</disclaimer>
		<language>en</language>
        <platform lang="en">all</platform>
        <news>[COLOR orange][B]WatchNixtoons2[/B][/COLOR] - Cartoons &amp; Anime
[B]0.7.0:[/B]
- Update User Agent
- Small code clean-up
- Change some default settings
- Now has the ability to show show thumbnails in dubbed, subbed &amp; cartoons
  - This needs to be enabled in the options</news>
		<assets>
            <icon>icon.png</icon>
        </assets>
    </extension>
</addon><addon id="repository.sunnyrepo" name="Sunny Repo" version="2.0.0" provider-name="slrwin">
    <extension point="xbmc.addon.repository" name="sunnyrepo">
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/slrwin/sunnyrepo/master/repo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/slrwin/sunnyrepo/master/repo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/slrwin/sunnyrepo/master/repo/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/thecrewwh/zips/master/matrix/_zip/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/thecrewwh/zips/master//matrix/_zip/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/thecrewwh/zips/master//matrix/_zip</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/Gujal00/smrzips/master/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Gujal00/smrzips/master/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Gujal00/smrzips/master/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/teamuniversal/scrapers/master/_modules4all/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/teamuniversal/scrapers/master/_modules4all/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/teamuniversal/scrapers/master/_modules4all/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/dobbelina/repository.dobbelina/master/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/dobbelina/repository.dobbelina/master/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/dobbelina/repository.dobbelina/master/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/a4k-openproject/repository.openscrapers/master/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/a4k-openproject/repository.openscrapers/master/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/a4k-openproject/repository.openscrapers/master/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/therealatreides/housetools/master/code/_housefiles/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/therealatreides/housetools/master/code/_housefiles/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/therealatreides/housetools/master/code/_housefiles/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/Tikipeter/repository.tikipeter/master/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Tikipeter/repository.tikipeter/master/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Tikipeter/repository.tikipeter/master/zips</datadir>
        </dir>
        <dir minversion="18.9.701">
            <info compressed="false">https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/master/matrix/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/master/matrix/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/umbrellaplug/umbrellaplug.github.io/master/matrix/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/CocoJoe2411/repository.cocoscrapers/master/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/CocoJoe2411/repository.cocoscrapers/master/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/CocoJoe2411/repository.cocoscrapers/master/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/drinfernoo/plugin.program.autowidget/repo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/drinfernoo/plugin.program.autowidget/repo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/drinfernoo/plugin.program.autowidget/repo/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/drinfernoo/plugin.program.autowidget/devrepo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/drinfernoo/plugin.program.autowidget/devrepo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/drinfernoo/plugin.program.autowidget/devrepo/zips/</datadir>
        </dir>
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/drinfernoo/repository.opendevtools/master/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/drinfernoo/repository.opendevtools/master/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/drinfernoo/repository.opendevtools/master/zips/</datadir>
        </dir>
                <dir>
            <info compressed="false">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/repo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/repo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/repo/zips/</datadir>
        </dir>
        <dir minversion="18.0.0" maxversion="18.9.9">
            <info compressed="false">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/leia/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/leia/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/leia/zips/</datadir>
        </dir>
        <dir minversion="19.0.0">
            <info compressed="false">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/matrix/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/matrix/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/matrix/zips/</datadir>
        </dir>
        <dir minversion="20.0.0">
            <info compressed="false">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/nexus/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/nexus/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/Goldenfreddy0703/repository.hooty/master/nexus/zips/</datadir>
        </dir>
        		<dir minversion="18.0">
			<info compressed="false">https://raw.githubusercontent.com/nixgates/nixgates/master/repo/zips/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/nixgates/nixgates/master/repo/zips/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/nixgates/nixgates/master/repo/zips/</datadir>
		</dir>
		<dir minversion="18.0" maxversion="18.9.0">
			<info compressed="false">https://raw.githubusercontent.com/nixgates/nixgates/master/leia/zips/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/nixgates/nixgates/master/leia/zips/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/nixgates/nixgates/master/leia/zips/</datadir>
		</dir>
		<dir minversion="18.9.0">
			<info compressed="false">https://raw.githubusercontent.com/nixgates/nixgates/master/matrix/zips/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/nixgates/nixgates/master/matrix/zips/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/nixgates/nixgates/master/matrix/zips/</datadir>
		</dir>
                <dir>
            <info compressed="false">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/repo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/repo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/repo/zips/</datadir>
        </dir>
		<dir minversion="18.0" maxversion="18.9.0">
            <info compressed="false">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/leia/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/leia/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/leia/zips/</datadir>
        </dir>
        <dir minversion="18.9.0" maxversion="19.9.0">
            <info compressed="false">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/matrix/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/matrix/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/matrix/zips/</datadir>
        </dir>
        <dir minversion="19.9.1">
            <info compressed="false">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/nexusrepo/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/nexusrepo/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/jurialmunkey/repository.jurialmunkey/master/nexusrepo/zips/</datadir>
        </dir>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary>sunnyrepo</summary>
        <description>Sunny Repo - Un-official Kodi addons repository</description>
        <disclaimer />
        <platform>all</platform>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.jpg</fanart>
        </assets>
    </extension>
</addon><addon id="script.ezmaintenanceplus" name="EZ Maintenance+" version="2022.06.21" provider-name="aenema, peno">
  <requires>
    <import addon="script.module.requests" version="1.0.0" />
  </requires>
  <extension point="xbmc.python.pluginsource" library="default.py">
     <provides>executable</provides>
  </extension>
  <extension point="xbmc.service" library="service.py" start="startup" />
  <extension point="xbmc.addon.metadata">
	<summary>A Streamlined Utility Tool for Kodi</summary>
	<description>No Bloatware, no Nonsense! Just Keep your Kodi sharp and clean with this utility tool... Now with a Custom Wizard.</description>
    <language />
    <platform>all</platform>
    <license>The MIT License</license>
    <forum>-</forum>
    <source>https://github.com</source>
    <assets>
	    <icon>icon.png</icon>
	    <fanart>fanart.png</fanart>
    </assets>
  </extension>
</addon><addon id="script.module.metahandler" name="metahandler" version="5.0.1a" provider-name="Eldorado">
	<requires>
		<import addon="xbmc.python" version="3.0.0" />
		<import addon="script.module.six" version="1.14.0+matrix.2" />
		<import addon="script.module.simplejson" version="3.17.0+matrix.2" />
		<import addon="script.module.myconnpy" version="8.0.18+matrix.1" />
	</requires>
	<extension point="xbmc.python.module" library="lib" />
	<extension point="xbmc.python.pluginsource" library="lib/default.py" />
	<extension point="xbmc.addon.metadata">
		<platform>all</platform>
		<summary lang="en">Downloads Artwork for TV shows, Movies and Music videos for addons and stores them in a local SQLITE database</summary>
		<description lang="en">Queries, stores, and returns metadata for TV shows, Movies and Musicvideos. [CR]Sources:[CR]www.thetvdb.com[CR]www.themoviedb.org[CR]www.imdb.com[CR]www.omdbapi.com[CR]This product uses the TMDb API but is not endorsed or certified by TMDb.</description>
		<disclaimer lang="en" />
		<language />
		<license>GNU GENERAL PUBLIC LICENSE. Version 2, June 1991</license>
		<forum />
		<website />
		<email />
		<source />
		<assets>
			<icon>icon.png</icon>
			<fanart />
			<screenshot />
		</assets>
		<news>
[B]Version 5.0.1a[/B]
- Fixed incorrect meta causing exception on marking as watched. -umbrella
		</news>
	</extension>
</addon><addon id="script.module.simpleeval" name="Simple Eval" version="0.9.10" provider-name="Daniel Fairhead">
    <requires>
        <import addon="xbmc.python" version="3.0.0" />
    </requires>
    <extension point="xbmc.python.module" library="lib" />
    <extension point="xbmc.addon.metadata">
        <summary lang="en_GB">Simple Eval</summary>
        <description lang="en_GB">A library for easily adding evaluatable expressions into python projects</description>
        <platform>all</platform>
        <license>MIT</license>
        <source>https://github.com/mikesilvo164/script.module.simpleeval</source>
        <assets>
            <icon>icon.png</icon>
        </assets>
    </extension>
</addon><addon id="service.subtitles.a4ksubtitles" name="a4kSubtitles" version="3.3.0" provider-name="Unknown">
    <requires>
      <import addon="script.module.requests" />
      <import addon="vfs.libarchive" optional="true" />
    </requires>
    <extension point="xbmc.subtitle.module" library="main.py" />
    <extension point="xbmc.service" library="main_service.py" />
    <extension point="xbmc.addon.metadata">
        <summary lang="en">a4kSubtitles - Multi-Source Subtitles Addon</summary>
        <description>
Multi-source subtitles addon optimized for Seren and a4kScrapers.
Supports: OpenSubtitles, BSPlayer, Podnadpisi.NET, Subscene, Addic7ed
        </description>
        <platform>all</platform>
        <reuselanguageinvoker>true</reuselanguageinvoker>
        <license>MIT License</license>
        <website>https://github.com/newt-sc/a4kSubtitles</website>
        <source>https://github.com/newt-sc/a4kSubtitles</source>
        <assets>
            <icon>icon.png</icon>
            <screenshot>screenshot-01.png</screenshot>
            <screenshot>screenshot-02.png</screenshot>
            <screenshot>screenshot-03.png</screenshot>
        </assets>
        <news>
[v3.3.0]:
  * Improve Subscene support

[v3.2.0]:
  * Option to disable subs encoding detection

[v3.1.0]:
  * Force proper embedded subs selection based on preferred language overriding KODI
  * Subs encoding fallback to predefined list in case auto detection fails

[v3.0.0]:
  * Use cf bypass for Subscene
  * Auto-detect subs encoding and convert to utf-8

[v2.8.0]:
  * Support tvshows with more than 250 episodes for episode id lookup when tvshow imdb id is provided.

[v2.7.0]:
  * Support tvshow imdb id, along with season and episode passed from video file url.

[v2.6.0]:
  * Support imdb id (movie or episode) passed from video file url.

[v2.5.0]:
  * Add TLS adapter fallback

[v2.4.0]:
  * Fix some ssl issues

[v2.3.0]:
  * Add concurrency error handling

[v2.2.0]:
  * Fix KODI 19 Matrix support

[v2.1.0]:
  * Fix Persian search in Subscene

[v2.0.0]:
  * Use IMDb as main source for all meta.
  * Retry on 503 (Service Unavailable). OpenSubtitles and Subscene seems to return it occasionally.

[v1.8.0]:
  * Remove SubDb (Site is down)
  * Make lib vfs optional since there are fallbacks and it is used as last case scenario. Thus making the addon installable on platforms which are not supported by lib vfs.

[v1.7.2]:
  * Improve results sort based on title match

[v1.7.1]:
  * Drop python meta as it prevents installations on pre Kodi 19 versions

[v1.7.0]:
  * Update python meta to enable Kodi 19 installations

[v1.6.0]:
  * Add option to auto download first subtitle result silently

[v1.5.0]:
  * Auto open search dialog only on movie and tvshow videos

[v1.4.0]:
  * Add option to auto open the search dialog when the video does not have subtitles

[v1.3.0]:
  * Improve tvshow year scraping

[v1.2.0]:
  * Use internal ZipFile for extraction with a fallback to vfs.libarchive

[v1.1.0]:
  * Improve imdb id scraping

[v1.0.1]:
  * Add screenshots

[v1.0.0]:
  * Invalidate BSPlayer results cache when download links expire
  * Extraction fallback: zip -&gt; gzip -&gt; raw

[v0.0.30]:
  * Add service names in ad detection
  * Removed the option to disable cleaning of ads
  * Add remote fetching of addic7ed data

[v0.0.29]:
  * Fix Podnadpisi download of results missing filename meta
  * Fix last results cache not invalidated on language preferences change

[v0.0.28]:
  * Attempt scrape of imdb id when missing
  * Improve filename parsing
  * Fix SubDB lang code
  * Fix Podnadpisi not returning release name

[v0.0.27]:
  * Attempt to auto-fix a garbled cyrillic encoded subtitles
  * Fix more encoding issues
  * Ensure progress dialog close even if the addon crashes
  * Apply color to service name in results and bold tags
  * Show notification if imdb id is missing

[v0.0.26]:
  * Support for Addic7ed
  * Improve cache of the last results
  * Don't show progress when showing results from cache

[v0.0.25]:
  * Fix cancellation thread exit

[v0.0.24]:
  * Show progress dialog only for search

[v0.0.23]:
  * Add progress dialog
  * Support cancellation

[v0.0.22]:
  * Fix meta string conversion issue

[v0.0.21]:
  * TVShow year scrape from imdb when necessary

[v0.0.20]:
  * Improve Subscene tvshow matching
  * Extract first sub file from zips when none is matched
  * Fix Podnadpisi not working properly for tvshows
  * Fix non-ascii video file title issues
  * Add tvshow tests

[v0.0.19]:
  * Update settings
  * Fix language code suffix format in the subtitle file name
  * Support for Subscene

[v0.0.18]:
  * Support for Podnadpisi.NET
  * Support for SubDB

[v0.0.17]:
  * Reuse KODI's Python language invoker
    * Improves performance on low-end devices when switching subtitles for best match
  * Url decode subtitle names

[v0.0.16]:
  * Cache last result
  * OpenSubtitles always queries:
    * by imdb id and title
    * by video file hash
  * Improve results ordering:
    * preferred lang
    * lang
    * synced
    * name match
    * rating
    * hearing impaired
    * subtitle service
  * Fix url with numbers matching in ads detection

[v0.0.15]:
  * Remove ads by default
  * Support for BSPlayer
  * Additional option for OpenSubtitles to use file hash (Limits results to exact matches)

[v0.0.14]:
  * Fix API and normal usage at the same time

[v0.0.13]:
  * Exclude development files from release

[v0.0.12]:
  * Removal of ads (Experimental)
  * Fix extract issue when file contains unicode symbols

[v0.0.11]:
  * Changelog in KODI

[v0.0.10]:
  * Inserted language code in sub filename

[v0.0.9]:
  * Implemented (orginal, default, none, forced_only) as KODI language setting
  * Fixed minor bugs in API implementation
  * Added .idea folder to .gitignore

[v0.0.8]:
  * opensubtitles should make max 2 requests for separate languages
  * lint updates
  * add tests for download

[v0.0.7]:
  * API class rename

[v0.0.6]:
  * fix core requiring handle even with API usage

[v0.0.5]:
  * expose API for usage without KODI
  * add tests for search

[v0.0.4]:
  * distribution process:
    * KODI repository with updates based on github releases
    * addons.xml and addons.xml.crc auto generation via git hooks
    * release automation on merge to master via Github Actions

[v0.0.3]:
  * general settings for configuring requests timeout and results limit
  * additional ordering of the results depending on the similarity ratio of the video file name and the subtitle file name

[v0.0.2]:
  * improve archive extraction support
  * limit the results and add requests timeout
  * fix OpenSubtitles authentication
  * handle debug logging detection issues

[v0.0.1]:
  * initial working version (search and download subtitles)
  * OpenSubtitles support with optional authentication
  * results ordering with preferred language ordered first
        </news>
    </extension>
</addon></addons>